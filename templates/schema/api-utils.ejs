import type { ZodSchema } from 'zod';
import { IS_DEV } from '../constants/env';

export class ZodValidationError extends Error {
  constructor(message: string) {
    super(message);
    this.name = 'ZodValidationError';
  }
}

export const validateSchema = (schema: ZodSchema, data: unknown) => {
  const result = schema.safeParse(data);

  if (!result.success) {
    const errorMessage = result.error.errors
      .map((err) => `Path: ${err.path.join('.')} - ${err.message}`)
      .join('\n');

    const error = new ZodValidationError(
      `❌ Invalid data according to zod schema:\n${errorMessage}\n\n🔍 Received data: ${JSON.stringify(data, null, 2)}`,
    );

    if (IS_DEV) {
      console.error(error);
    }

    throw error;
  }

  return data;
};
